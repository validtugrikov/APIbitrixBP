from typing import Union
import func
from fastapi import FastAPI
import markdown2
from fastapi.responses import HTMLResponse
from pprint import pprint
import kontur
import keys
from datetime import datetime
import requests
import base64


from template_base import template_finder, template_finder_ip

AUTH = keys.API_KEY

app = FastAPI()

# uvicorn main:app --host 95.152.289.9 --reload


@app.post("/reference/get/brief_report/")
def send_report_to_company(auth: str, company_id: int, inn: str, folder_id):
    if auth != AUTH:
        return 'invalid auth_token'
    print(auth, company_id, inn, folder_id)

    # –°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–ø–∞–ø–∫–∏ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç—á–µ—Ç–æ–≤ –∏–∑ reference
    print('–°–æ–∑–¥–∞—é –ø–∞–ø–∫—É')
    folder_title = func.get_current_datetime()
    print (folder_title)
    folder = func.addsubfolder(folder_id.strip('_'), f'–í—ã–≥—Ä—É–∑–∫–∞ reference_—Ñ–æ–∫—É—Å {str(folder_title)}')
    print('–°–æ–∑–¥–∞–Ω–∞ –ø–∞–ø–∫–∞ ID:', folder['ID'])

    # –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏—Ö –∫–æ–Ω—Ç—É—Ä–∞
    print('–ø–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ç—É—Ä–∞')
    kontur_auth = keys.KONTUR_KEY
    print('–ø–æ–ª—É—á–∞—é briefReportPdf')
    briefReportPdf = kontur.download_pdf_express(f'https://focus-api.kontur.ru/api3/briefReport?key={kontur_auth}&inn={inn}&pdf=value', '–≠–∫—Å–ø—Ä–µ—Å—Å-–æ—Ç—á–µ—Ç –ø–æ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—É.pdf')
    print('–ø–æ–ª—É—á–∞—é finan')
    finan = kontur.download_pdf_express(f'https://focus-api.kontur.ru/api3/finan?key={kontur_auth}&inn={inn}', '–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑.pdf')
    print('–ø–æ–ª—É—á–∞—é excerpt')
    excerpt = kontur.download_pdf_express(f'https://focus-api.kontur.ru/api3/excerpt?key={kontur_auth}&inn={inn}', '–í—ã–ø–∏—Å–∫–∞ –∏–∑ –ï–ì–†–Æ–õ/–ï–ì–†–ò–ü.pdf')

    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ –ë24
    print('–æ—Ç–ø—Ä–∞–≤–ª—è—é —Ñ–∞–π–ª—ã –≤ –±24')
    send_results = []
    for i in [briefReportPdf, finan, excerpt]:
        print('–ó–∞–≥—Ä—É–∑–∫–∞', i['title'])
        upload = func.upload_file(i['base64_file'], i['title'], folder['ID'])
        send_results.append([f"{upload['ID']}_{i['title']}", i['base64_file']])
        file = i['base64_file']
        print(upload)

    print('–ì—Ä—É–∂—É –∫–æ–º–º–µ–Ω—Ç')
    today = datetime.now()
    func.b.call('crm.timeline.comment.add', {
        'fields':{
            'ENTITY_ID': company_id,
            'ENTITY_TYPE': 'company',
            'COMMENT': f'üé© –í—ã–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ç—É—Ä —Ñ–æ–∫—É—Å –æ—Ç {datetime.today().strftime("%Y-%m-%d")}',
            'FILES': send_results,
            'AUTHOR_ID': '1'
            }
    })

    # print('–≥–æ—Ç–æ–≤–æ')



'''
    file_in_base64 = file['base64_file']
    file_name = 'report.pdf'
    upload = func.upload_file(file_in_base64, file_name, folder_id)'''


@app.post("/element_add/")
def element_add(auth: str, massiv: dict):
    '''
        # –ú–µ—Ç–æ–¥ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ —Å–º–∞—Ä—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞

        –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –º–∞—Å—Å–∏–≤ –≤–∏–¥–∞:

        ### –ü—Ä–∏–º–µ—Ä –∑–∞–ø—Ä–æ—Å–∞

        ```json
        {
            "–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ 1–°": "123",
            "–ö–∞—Ä—Ç–æ—á–∫–∞ –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞": ["–ö–∞—Ä—Ç–æ—á–∫–∞.txt", "0JTQvtC60YPQvNC10L3Rgg=="],
            "–¢–∏–ø –∫–æ–Ω—Ç—Ä–∞–≥–Ω–µ—Ç–∞": "–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –ª–∏—Ü–æ",
            "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞": "408",
            "–ò–ù–ù –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞ –≤ 1–°": "1234567",
            "–ö–æ–ø–∏—è —Ä–µ—à–µ–Ω–∏—è –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –∏–ª–∏ –∫–æ–ø–∏—è –ø—Ä–∏–∫–∞–∑–∞ –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è":
                ["–ü—Ä–∏–∫–∞–∑.pdf", "0JTQvtC60YPQvNC10L3Rgg=="],
            "–ö–æ–ø–∏—è —É—Å—Ç–∞–≤–∞ (–ø–µ—Ä–≤–∞—è, –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –ø–æ–ª–Ω–æ–º–æ—á–∏—è–º–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è)":
                ["–£—Å—Ç–∞–≤.txt", "0JTQvtC60YPQvNC10L3Rgg=="],
            "–ö–æ–ø–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞ (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞)":
                ["–ü–∞—Å–ø–æ—Ä—Ç.pdf", "0JTQvtC60YPQvNC10L3Rgg=="],
            "–ö–æ–ø–∏—è –°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ –≤–Ω–µ—Å–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –≤ –ï–ì–†–ò–ü":
                ["–°–≤–∏–¥–µ—Ç–µ–ª—å—Å–≤–æ_–µ–≥—Ä–∏–ø.txt","0JTQvtC60YPQvNC10L3Rgg=="],
            "–ö–æ–ø–∏—è –°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–µ –Ω–∞ —É—á–µ—Ç –≤ –Ω–∞–ª–æ–≥–æ–≤–æ–º –æ—Ä–≥–∞–Ω–µ (–ò–ù–ù)": ["–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ_–ò–ù–ù.txt", "0JTQvtC60YPQvNC10L3Rgg=="],
            "–î–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞ —É–ø–æ–ª–Ω–æ–º–æ—á–µ–Ω–Ω–æ–µ –ª–∏—Ü–æ –ø—Ä–∏ –ø–æ–¥–ø–∏—Å–∞–Ω–∏–∏ –¥–æ–≥–æ–≤–æ—Ä–∞":
                ["–î–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å.pdf","0JTQvtC60YPQvNC10L3Rgg=="]
        }
        ```
        –ü–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –ø–æ–ª–µ–π, –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É /docs/fields
        ---

        # –û—Ç–≤–µ—Ç

        –ü—Ä–∏ —É—Å–ø–µ—à–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–µ, –≤ –æ—Ç–≤–µ—Ç –æ—Ç–¥–∞—Å—Ç –º–∞—Å—Å–∏–≤ –≤–∏–¥–∞:
        ```
        {
        "auth": "111",
        "massiv": {
            "–ù–æ–º–µ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ 1–°": "123",
            "–ö–∞—Ä—Ç–æ—á–∫–∞ –ö–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞": [
            "–ö–∞—Ä—Ç–æ—á–∫–∞.txt",
            "0JTQvtC60YPQvNC10L3Rgg=="
            ]
        },
        "result": "–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞"
        }
        ```
        ## –ü—Ä–∞–≤–∏–ª–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ–ª–µ–π –¥–ª—è –≤–ª–æ–∂–µ–Ω–∏–π

        - –°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ –∑–∞–∫–æ–¥–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥–∏—Ä–æ–≤–∫–æ–π `base64`

        - –í –ø–æ–ª–µ –¥–ª—è –≤–ª–æ–∂–µ–Ω–∏—è, –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ –≤–∏–¥–∞ `["–ù–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞", "–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è"]`

        ## –ü—Ä–∞–≤–∏–ª–∞ –ø–µ—Ä–µ–¥–∞—á–∏ –ø–æ–ª–µ–π –¥–ª—è —Å–≤—è–∑–∏

        –ü–æ–¥ —Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∫–æ–π "–ø–æ–ª–µ –ø—Ä–∏–≤—è–∑–∫–∏" –∏–º–µ–µ—Ç—Å—è –≤–≤–∏–¥—É –ø–æ–ª—è –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –±–∏—Ç—Ä–∏–∫—Å–æ–º –¥–ª—è —Å–≤—è–∑–∫–∏ –æ–¥–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ CRM —Å –¥—Ä—É–≥–∏–º
        –¥–ª—è –ø–æ–¥–æ–±–Ω—ã—Ö –ø–æ–ª–µ–π, –≤ —è–≤–Ω–æ–º –≤–∏–¥–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è ID —ç—Ç–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –ë24.


    '''

    el = func.b.get_all('crm.item.add',
    {
        'entityTypeId': '162',
        'fields':  {
            'contactId': '408',
            'stageId': 'DT162_6:UC_T2LCT2',
            'ufCrm4_1688739541847': '–û–û–û –†–æ–º–∞—à–∫–∞',
            "ufCrm4_1688737979": '1',
            "ufCrm4_1688738013": '1',
            "ufCrm4_1688738502": '1',
            'ufCrm4_1688738829061': '123',
            'ufCrm4_1688738862887': '12345678910',
            'ufCrm4_1688739593576': '28',
            'ufCrm4_1688740462693': ['–ö–∞—Ä—Ç–æ—á–∫–∞.txt', '0JTQvtC60YPQvNC10L3Rgg=='],
            'ufCrm4_1688744581761': ['–ü—Ä–∏–∫–∞–∑.pdf', '0JTQvtC60YPQvNC10L3Rgg=='],
            'ufCrm4_1688744595387': ['–£—Å—Ç–∞–≤.txt', '0JTQvtC60YPQvNC10L3Rgg=='],
            'ufCrm4_1688744613533': ['–ü–∞—Å–ø–æ—Ä—Ç.pdf', '0JTQvtC60YPQvNC10L3Rgg=='],
            'ufCrm4_1688744633795': ['–°–≤–∏–¥–µ—Ç–µ–ª—å—Å–≤–æ_–µ–≥—Ä–∏–ø.txt', '0JTQvtC60YPQvNC10L3Rgg=='],
            'ufCrm4_1688744648168': ['–°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–æ_–ò–ù–ù.txt', '0JTQvtC60YPQvNC10L3Rgg=='],
            'ufCrm4_1688744699057': ['–î–æ–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å.pdf', '0JTQvtC60YPQvNC10L3Rgg==']}
    })



    result = '–†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∑–∞–ø—Ä–æ—Å–∞'
    return {
        'auth': auth,
        'massiv': massiv,
        'result': {
            '–≠–ª–µ–º–µ–Ω—Ç —Å–º–∞—Ä—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞': {"ID": el['item']['id']}
        }
    }

@app.post('/lead_fields/')
def lead_fields():
    f = func.b.get_all('crm.lead.fields')
    return f

"""

@app.post("/element_fields_get/")
def element_fields_get():
    '''
    –ú–µ—Ç–æ–¥ –æ—Ç–¥–∞–µ—Ç –º–∞—Å—Å–∏–≤ –ø–æ–ª–µ–π —Å–º–∞—Ä—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞, –¥–ª—è —Å–ø–∏—Å–∫–æ–≤—ã—Ö –ø–æ–ª–µ–π, –æ—Ç–¥–∞–µ—Ç id –∑–Ω–∞—á–µ–Ω–∏–π.
    '''
    f =—Ñ func.get_sp_field_names('162')
    return f

@app.post("/contact_person_add/")
def contact_person_add():
    '''
    –°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ç–∞–∫—Ç —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–æ–µ –ª–∏—Ü–æ" –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç BX_CONTACT_ID
    '''
    return None

"""

@app.post('/reference/check_updates/')
def kontur_checker(auth:str, inn:str, company_id:str):
    '''
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ –∫–æ–Ω—Ç—É—Ä —Ñ–æ–∫—É—Å–µ –ø–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–æ–º—É –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç—É

    ## –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
    - –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥ –∏–Ω–Ω –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞ –∏ id –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –∫–æ—Ç–æ—Ä—É—é –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
    - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å—ã:
        - companyBankruptcy | –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ—É –æ –±–∞–Ω–∫—Ä–æ—Ç—Å–≤–µ
        - inspections | –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ—É –æ –ø—Ä–æ–≤–µ—Ä–∫–∞—Ö
        - fssp | –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ—É –ø—Ä–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø—Ä–æ–∏–∑-–≤–∞
        - req | –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

            "–°—Ç–∞—Ç—É—Å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ - status": {
                "–ù–µ—Ñ–æ—Ä–º–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ - statusString": "–î–µ–π—Å—Ç–≤—É—é—â–µ–µ"
                },
        - analytics (–†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞), –≤ –æ—Ç–≤–µ—Ç–µ –∏—â–µ—Ç –∫–ª—é—á–∏
            - –ù–∞–º–µ—Ä–µ–Ω–∏—è –æ –±–∞–Ω–∫—Ä–æ—Ç—Å–≤–µ
                ```
                    "–Æ—Ä. –ø—Ä–∏–∑–Ω–∞–∫–∏. –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–∞–º–µ—Ä–µ–Ω–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Å—É–¥ —Å –∑–∞—è–≤–ª–µ–Ω–∏–µ–º –æ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü - m7015":¬†true
                ```
            - –î–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ª–∏—Ü–∞
                ```
                    "–û—Å–æ–±—ã–µ —Ä–µ–µ—Å—Ç—Ä—ã –§–ù–°. –§–ò–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã –≤ —Ä–µ–µ—Å—Ç—Ä–µ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ª–∏—Ü (–§–ù–°) –∏–ª–∏ –≤ –≤—ã–ø–∏—Å–∫–µ –ï–ì–†–Æ–õ - m5008": true,
                ```
            - –û—Ç–≤–µ—Ç—á–∏–∫ –ø–æ –¥–µ–ª–∞–º –æ –±–∞–Ω–∫—Ä–æ—Ç—Å–≤–µ
                ```
                    "–ê—Ä–±–∏—Ç—Ä–∞–∂. –î–µ–ª–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç—á–∏–∫–∞. –û—Ü–µ–Ω–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ–ª –∑–∞ 12 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –º–µ—Å—è—Ü–µ–≤ - q2001": 24,
                ```
    - –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ –≤ –±24
    '''
    if auth != keys.API_KEY:
        return 'invalid auth'
    print('–ü–æ–ª—É—á–∞—é –¥–∞–Ω–Ω—ã–µ –∏–∑ –∫–æ–Ω—Ç—É—Ä–∞')
    # –ü–æ–ª—É—á–∞–µ–º –º–∞—Å—Å–∏–≤ –º–µ—Ç–æ–¥–æ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
    analytics = kontur.get_analytics(inn)
    # return analytics
    # –ü—Ä–∏–≤–æ–¥–∏–º –æ—Ç–≤–µ—Ç –º–µ—Ç–æ–¥–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –≤ —á–µ–ª–æ–≤–µ–∫–æ–ø–æ–Ω—è—Ç–Ω—ã–π –≤–∏–¥

    # –î–ª—è –∫–∞–∂–¥–æ–≥–æ —Å–æ–±—ã—Ç–∏—è –æ–±—ä—è–≤–ª–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    kontur_bancrot = 'None'
    kontur_discval = 'None'
    kontur_otvetchick = 'None'
    kontur_nalog = 'None'

    # –ò—â–µ–º –∫–ª—é—á–∏ –≤ –º–∞—Å—Å–∏–≤–µ, –µ—Å–ª–∏ –Ω–∞—à–ª–∏ - –∏–∑–º–µ–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö
    for i in analytics:
        # –ù–∞–º–µ—Ä–µ–Ω–∏–µ –æ –±–∞–Ω–∫—Ä–æ—Ç—Å–≤–µ
        if i == 'm7015':
            kontur_bancrot = '–û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Å–æ–æ–±—â–µ–Ω–∏—è –æ –Ω–∞–º–µ—Ä–µ–Ω–∏–∏ –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –≤ —Å—É–¥'
            '—Å –∑–∞—è–≤–ª–µ–Ω–∏–µ–º –æ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü'
        # –ù–∞–º–µ—Ä–µ–Ω–∏–µ –æ –±–∞–Ω–∫—Ä–æ—Ç—Å–≤–µ
        if i == 'm5008':
            kontur_discval = '–§–ò–û —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π –±—ã–ª–∏ –Ω–∞–π–¥–µ–Ω—ã'
            '–≤ —Ä–µ–µ—Å—Ç—Ä–µ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ª–∏—Ü'
        # –û—Ç–≤–µ—Ç—á–∏–∫ –ø–æ –¥–µ–ª–∞–º –æ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–µ
        if i == 'q2001':
            kontur_otvetchick = f'–î–µ–ª–∞ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –æ—Ç–≤–µ—Ç—á–∏–∫–∞. –û—Ü–µ–Ω–∫–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ –¥–µ–ª –∑–∞ 12 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –º–µ—Å—è—Ü–µ–≤: {analytics[i]}'
        # –ò–∑–º–µ–Ω–µ–Ω–∏–µ –≤ –Ω–∞–ª–æ–≥–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        if i == 'm7050':
            kontur_nalog = '–ü—Ä–∏–º–µ–Ω—è–µ—Ç —É–ø—Ä–æ—â–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è ‚Äî –£–°–ù'
        if i == 'm7051':
            kontur_nalog = '–ü—Ä–∏–º–µ–Ω—è–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—É—é —É–ø—Ä–æ—â–µ–Ω–Ω—É—é —Å–∏—Å—Ç–µ–º—É –Ω–∞–ª–æ–≥–æ–æ–±–ª–æ–∂–µ–Ω–∏—è ‚Äî –ê–£–°–ù'
        if i == 'm7052':
            kontur_nalog = '–Ø–≤–ª—è–µ—Ç—Å—è –ø–ª–∞—Ç–µ–ª—å—â–∏–∫–æ–º –µ–¥–∏–Ω–æ–≥–æ —Å–µ–ª—å—Å–∫–æ—Ö–æ–∑—è–π—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –Ω–∞–ª–æ–≥–∞ ‚Äî –ï–°–•–ù'

    # –§–æ—Ä–º–∏—Ä—É–µ–º –º–∞—Å—Å–∏–≤ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –±24
    bx_data = {
        # DEV_KONTUR –ë–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–æ
        'UF_CRM_1692633467146': kontur.get_concurrent_bank_stages(inn),
        # DEV_KONTUR_ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–æ–∏–∑-–≤–æ
        'UF_CRM_1692633595': kontur.get_fssp_data(inn),
        # DEV_KONTUR_ –ø—Ä–µ–∫—Ä–∞—â–µ–Ω–∏–µ –¥–µ—è—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
        'UF_CRM_1692633625': kontur.get_organization_status(inn),
        # DEV_KONTUR_ –ù–∞–º–µ—Ä–µ–Ω–∏—è –æ –±–∞–Ω–∫—Ä–æ—Ç—Å–≤–µ
        'UF_CRM_1693778422810': kontur_bancrot,
        # DEV_KONTUR_ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ª–∏—Ü–∞
        'UF_CRM_1693778437483': kontur_discval,
        # DEV_KONTUR_ –æ—Ç–≤–µ—Ç—á–∏–∫ –ø–æ –¥–µ–ª–∞–º –æ –±–∞–Ω–∫—Ä–æ—Ç—Å—Ç–≤–µ
        'UF_CRM_1693778451499': kontur_otvetchick,
        # DEV_KONTUR_ –ò–∑–º–µ–Ω–µ–Ω–∏—è –≤ –Ω–∞–ª–æ–≥–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
        'UF_CRM_1693778465284': kontur_nalog,
    }
    print('–æ—Ç–≤–µ—Ç –∫–æ–Ω—Ç—É—Ä–∞', bx_data)
    print()
    print('–û—Ç–ø—Ä–∞–≤–ª—è—é –¥–∞–Ω–Ω—ã–µ –≤ –±24')
    —Å_upd = func.crm_company_update(company_id, bx_data)
    return —Å_upd, bx_data


@app.post('/get_lead_info/')
def get_lead_info(LEAD_ID, auth):
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–æ–π —Å—É—â–Ω–æ—Å—Ç–∏\n

    ```python
    def crm_lead_get(LEAD_ID):
    lead = b.call(
        'crm.lead.list', {
            'filter': {'ID': LEAD_ID},
            'select': ['PHONE', "*", "UF_"]
        }
    )
    return lead
    ```

    """
    if auth:
        print('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –≤—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ –ª–∏–¥—É')
        # return func.crm_lead_get(LEAD_ID)


@app.post('/reference/auto_fill_company_by_inn/')
def auto_fill_company_by_inn(company_id, auth, inn):
    """
    # –ú–µ—Ç–æ–¥ –¥–ª—è –∞–≤—Ç–æ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –¥–∞–¥–∞—Ç—ã

    ## –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥: \n

    - –∏–Ω–Ω –∫–æ–º–ø–∞–Ω–∏–∏
    - auth —Ç–æ–∫–µ–Ω
    - id –∫–æ–º–ø–∞–Ω–∏–∏
    ---

    ## –õ–æ–≥–∏–∫–∞ —Ä–∞–±–æ—Ç—ã

    - –ü–æ–ª—É—á–∞–µ–º –∏–∑ –î–∞–¥–∞—Ç—ã –¥–∞–Ω–Ω—ã–µ –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ –∏–Ω–Ω
    - –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:
        - –ò–∑–º–µ–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –ë24
        - –°–æ–∑–¥–∞–µ–º –∏ –∑–∞–ø–æ–ª–Ω—è–µ–º –æ–±—ä–µ–∫—Ç —Ä–µ–∫–≤–∏–∑–∏—Ç–∞
        - –§–∏–∫—Å–∏—Ä—É–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±24 –≤ –∫–∞—Ä—Ç—Ç–æ—á–∫—É –∫–æ–º–ø–∞–Ω–∏–∏

    - –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –Ω–µ  –ø–æ–ª—É—á–µ–Ω—ã:
        - –§–∏–∫—Å–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –î–ê–î–ê–¢–´ –≤ –≤–∏–¥–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
        - –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –±24 –≤ –∫–∞—Ä—Ç–æ—á–∫—É –∫–æ–º–ø–∞–Ω–∏–∏
    ---
    ## –ò—Ç–æ–≥ –æ—Ç—Ä–∞–±–æ—Ç–∫–∏
    - –ï—Å–ª–∏ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å  –¥–∞–Ω–Ω—ã–µ –≤ –¥–∞–¥–∞—Ç–µ, –≤ –±–∏—Ç—Ä–∏–∫—Å–µ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–æ–º–ø–∞–Ω–∏–∏ –±—É–¥–µ—Ç –∫–æ–º–º–µ–Ω—Ç –≤–∏–¥–∞:
    ```text
    –ü—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω
    –ö–∞—Ä—Ç–æ—á–∫–∞ –∫–æ–º–ø–∞–Ω–∏–∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ –∏–∑ –§–ù–°
    ```
    - –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å  –¥–∞–Ω–Ω—ã–µ –≤ –¥–∞–¥–∞—Ç–µ, –≤ –±–∏—Ç—Ä–∏–∫—Å–µ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–æ–º–ø–∞–Ω–∏–∏ –±—É–¥–µ—Ç –∫–æ–º–º–µ–Ω—Ç –≤–∏–¥–∞:
    ```text
    –ü—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ–∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏ –ø—Ä–µ—Ä–≤–∞–Ω, —á—Ç–æ-—Ç–æ  —Å–ª–æ–º–∞–ª–æ—Å—å
    {–°–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ}
    ```

    """
    print('–ø–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤')
    rq = func.Requisite(company_id=company_id)
    print(rq.rq_generate())
    rq.rq_add()


@app.post('/reference/auto_check_company_by_inn/')
def auto_fill_company_by_inn(company_id, auth, inn):
    """
    # –ú–µ—Ç–æ–¥ –¥–ª—è –ü—Ä–æ–≤–µ—Ä–∫–∏ —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–æ–º–ø–∞–Ω–∏

    ## –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥: \n

    - –∏–Ω–Ω –∫–æ–º–ø–∞–Ω–∏–∏
    - auth —Ç–æ–∫–µ–Ω
    - id –∫–æ–º–ø–∞–Ω–∏–∏
    ---
    ---

    - –°–æ–æ–±—â–µ–Ω–∏–µ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏
    """
    rq = func.Requisite(company_id=company_id)
    return rq.rq_diff()

@app.post('/document_generate/')
def document_generate(
    # –¢–æ–∫–µ–Ω
    auth,
    # id —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–º–∞—Ä—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞
    smart_process_id,
    # –§–æ—Ä–º–∞—Ç –¥–æ–≥–æ–≤–æ—Ä–∞
    # format,
    # –¢–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏
    company_type
    ):
    """
    # –ú–µ—Ç–æ–¥ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –≤ –ë24

    ### –ü—Ä–∏–Ω–∏–º–∞–µ—Ç –Ω–∞ –≤—Ö–æ–¥: \n
        - ID —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–º–∞—Ä—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞\n
        - –Æ—Ä. –ª–∏—Ü–æ —Å –Ω–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω—ã\n
        - –§–æ—Ä–º–∞—Ç –¥–æ–≥–æ–≤–æ—Ä–∞\n
            - –ü—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 100 %\n
            - –û—Ç—Å—Ä–æ—á–∫–∞ –ø–ª–∞—Ç–µ–∂–∞\n
            - –õ–∏–º–∏—Ç + –û—Ç—Å—Ä–æ—á–∫–∞\n
        - –¢–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏\n
            - –ò–ü\n
            - –Æ—Ä. –ª–∏—Ü–æ\n
    ### –û—Ç—Ä–∞–±–æ—Ç–∫–∞:\n
        - –ü–æ –≤—Ö–æ–¥–Ω—ã–º –¥–∞–Ω–Ω—ã–º –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –Ω—É–∂–Ω—ã–π —à–∞–±–ª–æ–Ω\n
        - –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ —à–∞–±–ª–æ–Ω—É\n
    ### –ù–∞ –≤—ã—Ö–æ–¥–µ:\n
        - –û—Ç–¥–∞–µ—Ç –ø–æ—Å—Ç –≤–∏–¥–∞:\n
            ```\n
            –î–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–æ–≥-—Ä–∞ {–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏}\n
            –°–æ–∑–¥–∞–Ω –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ —à–∞–±–ª–æ–Ω—É {–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —à–∞–±–ª–æ–Ω–∞}\n
            ```\n
    """
    if auth != AUTH:
        print(auth)
        return 'invalid auth_token'

    print('–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞')
    print({
        'smart_process_id': smart_process_id,
        'compny_type': company_type,
    })

    # –ü–æ–ª—É—á–∞–µ–º –∫–∞—Ä—Ç–æ—á–∫—É —Å–º–∞—Ä—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞
    print('–ü–æ–ª—É—á–∞—é —ç–ª–µ–º–µ–Ω—Ç —Å–º–∞—Ä—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞')
    s_p = func.b.get_all('crm.item.get', {'entityTypeId': '162', 'id': smart_process_id})

    # pprint(s_p)
    print('–ü–æ–ª—É—á–∞—é —é—Ä–ª–∏—Ü–æ —Å –Ω–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω—ã')
    c_id = s_p['item']['ufCrm4_1699361952']

    print('–ü–æ–ª—É—á–∞—é —Ñ–æ—Ä–º–∞—Ç –¥–æ–≥–æ–≤–æ—Ä–∞')
    format_id = s_p['item']['ufCrm4_1696272505025']


    print('–Æ–õ —Å –Ω–∞—à–µ–π —Å—Ç–æ—Ä–æ–Ω—ã', c_id)

    print('–û–ø—Ä–µ–¥–µ–ª—è—é —Ñ–æ—Ä–º—É —é—Ä–ª–∏—Ü–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞')

    client_inn = func.b.call('crm.company.get',  {'id': s_p['item']['companyId']})['UF_CRM_1690987965649']
    print(f'–ö–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –∏–Ω–Ω  = {len(client_inn)}')

    if len(client_inn) == 12:
        print('–ö–ª–∏–µ–Ω—Ç —è–≤–ª—è–µ—Ç—Å—è —Ñ–∏–∑–ª–∏—Ü–æ–º –∏–ª–∏ –∏–ø')
        company_type = False
    if len(client_inn) == 10:
        print('–∫–ª–∏–µ–Ω—Ç —è–≤–ª—è–µ—Ç—Å—è —é—Ä–ª–∏—Ü–æ–º')
        company_type = True
    else:
        print('—Å –∏–Ω–Ω –∫–ª–∏–µ–Ω—Ç–∞ —á–µ—Ç–æ –Ω–µ —Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª–µ –∏–Ω–Ω')



    print('–ó–∞–ø—É—Å–∫–∞—é –ø–æ–∏—Å–∫ —à–∞–±–ª–æ–Ω–∞')
    try:
        if company_type:
            template = template_finder(format=str(format_id), company=str(c_id))
            print(template)
        if not company_type:
            template = template_finder_ip(format=str(format_id), company=str(c_id))
            print(template)
    except Exception as e:
        return f'–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ —à–∞–±–ª–æ–Ω–∞, –ø–æ –≤—Ö–æ–¥–Ω—ã–º –¥–∞–Ω–Ω—ã–º `[–§–æ—Ä–º–∞—Ç={format_id}, –Æ–ª_—Å_–Ω–∞—à–µ–π_—Å—Ç–æ—Ä–æ–Ω—ã={c_id}]`, –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —à–∞–±–ª–æ–Ω –¥–æ–∫—É–º–µ–Ω—Ç–∞'

    doc = func.b.get_all('crm.documentgenerator.document.add', {
        'templateId': template,
        'entityTypeId': '162',
        'entityId': smart_process_id,
        'values': {
            'title': 'ghdbtn MIR',
            'MY_COMPANY': s_p['item']['ufCrm4_1696252759']
        }
    })
    print(doc.keys())
    # pprint(doc)

    doc_url = doc['document']['downloadUrlMachine']
    doc_title = doc['document']['title']
    response = requests.get(doc_url)

    # –ö–æ–¥–∏—Ä—É–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç Base64
    base64_content = base64.b64encode(response.content).decode('utf-8')
    print('—Ç–∞–π—Ç–ª')
    print(doc_title)

    # –ü–∏—Ö–∞–µ–º —ç—Ç–æ –≤—Å–µ –≤ –±24 –≤ –ø–æ–ª–µ `–î–æ–≥–æ–≤–æ—Ä` -> ufCrm4_1696431440310
    upload = func.b.call('crm.item.update', {
    "entityTypeId": 162,
    "id": int(smart_process_id),
    'fields': {
        'ufCrm4_1696431440310': {
            'data': {
                    'NAME': f'{doc_title}.docx',
                    'fileContent': base64_content,
                    'generateUniqueName': False
                },

        }
    }}, raw=True)

    print(upload)


    sucses = f'''–î–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–æ–≥-—Ä–∞ {smart_process_id}, c–æ–∑–¥–∞–Ω –¥–æ–∫—É–º–µ–Ω—Ç –ø–æ —à–∞–±–ª–æ–Ω—É {template}\n
    '''

    return sucses


@app.post('/num_to_text/')
def num_to_text(auth, number, case='—Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π'):
    """
    # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —á–∏—Å–ª–æ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–µ –≤ —Ç–µ–∫—Å—Ç

    –ó–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–∞–¥–µ–∂–µ–π: \n
    ```
        "–∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π": 'nomn',
        "—Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π": 'gent',
        "–¥–∞—Ç–µ–ª—å–Ω—ã–π": 'datv',
        "–≤–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π": 'accs',
        "—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π": 'ablt',
        "–ø—Ä–µ–¥–ª–æ–∂–Ω—ã–π": 'loct'
    ```
    """
    if auth != AUTH:
        print(auth)
        return 'invalid auth_token'


    result = func.sklonenie_chisla(number, case)
    return result


@app.post('/word_to_case/')
def word_to_case(auth, word, case='—Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π'):
    """
    # –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–æ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–º –ø–∞–¥–µ–∂–µ

    –ó–Ω–∞—á–µ–Ω–∏—è –¥–ª—è –ø–∞–¥–µ–∂–µ–π: \n
    ```
        "–∏–º–µ–Ω–∏—Ç–µ–ª—å–Ω—ã–π": 'nomn',
        "—Ä–æ–¥–∏—Ç–µ–ª—å–Ω—ã–π": 'gent',
        "–¥–∞—Ç–µ–ª—å–Ω—ã–π": 'datv',
        "–≤–∏–Ω–∏—Ç–µ–ª—å–Ω—ã–π": 'accs',
        "—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π": 'ablt',
        "–ø—Ä–µ–¥–ª–æ–∂–Ω—ã–π": 'loct'
    ```
    """
    if auth != AUTH:
        print(auth)
        return 'invalid auth_token'

    result = func.sklonenie_polnogo_imeni(word, case)
    return result


@app.post('/check_contract/')
def check_contract(auth, contract_id):
    if auth != AUTH:
        print(auth)
        return 'invalid auth_token'


    contract_fields_to_check = [
        'UF_CRM_4_1696272505025', # –§–æ—Ä–º–∞—Ç –¥–æ–≥–æ–≤–æ—Ä–∞
        'UF_CRM_4_1696266393755', # –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —Å—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞
        'UF_CRM_4_1697045531854', # –°—Ä–æ–∫ –æ—Ç—Å—Ä–æ—á–∫–∏ –ø–ª–∞—Ç–µ–∂–∞
    ]
    company_fields_to_check = [
        'UF_CRM_1697650419', # –ö–∞—Ä—Ç–æ—á–∫–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞
        'UF_CRM_1697650557', # –ö–æ–ø–∏—è –°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ –≤–Ω–µ—Å–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –≤ –ï–ì–†–Æ–õ/–ï–ì–†–ò–ü
        'UF_CRM_1697650520', # –ö–æ–ø–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞ (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞)
        'UF_CRM_1697650580', # –ö–æ–ø–∏—è –°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–µ –Ω–∞ —É—á–µ—Ç –≤ –Ω–∞–ª–æ–≥–æ–≤–æ–º –æ—Ä–≥–∞–Ω–µ (–ò–ù–ù)
        'PHONE', # –¢–µ–ª–µ—Ñ–æ–Ω
        'EMAIL', # EMAIL
    ]
    company_fields_to_check_ip = [
        'UF_CRM_1705571290', # –ü–∞—Å–ø–æ—Ä—Ç | –°–µ—Ä–∏—è
        'UF_CRM_1705571304', # –ü–∞—Å–ø–æ—Ä—Ç | –ù–æ–º–µ—Ä
        'UF_CRM_1705571321', # –ü–∞—Å–ø–æ—Ä—Ç | –ö–µ–º –≤—ã–¥–∞–Ω
        'UF_CRM_1705571339', # –ü–∞—Å–ø–æ—Ä—Ç | –ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
        'UF_CRM_1705571394', # –ü–∞—Å–ø–æ—Ä—Ç | –î–∞—Ç–∞ –≤—ã–¥–∞—á–∏
        'UF_CRM_1705571426', # –ü–∞—Å–ø–æ—Ä—Ç | –ê–¥—Ä–µ—Å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        # 'ADDRESS_LEGAL',
    ]
    company_fields_to_check_ul = [
        # 'UF_CRM_1706190888846', # –ö–æ–ø–∏—è –±—É—Ö–≥–∞–ª—Ç–µ—Ä—Å–∫–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞
        'UF_CRM_1697650477', # –ö–æ–ø–∏—è —É—Å—Ç–∞–≤–∞ (–ø–µ—Ä–≤–∞—è, –ø–æ—Å–ª–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã –∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –ø–æ–ª–Ω–æ–º–æ—á–∏—è–º–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è)
        'UF_CRM_1697650459', # –ö–æ–ø–∏—è —Ä–µ—à–µ–Ω–∏—è –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è –∏–ª–∏ –∫–æ–ø–∏—è –ø—Ä–∏–∫–∞–∑–∞ –æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è
        'UF_CRM_1697650419', # –ö–∞—Ä—Ç–æ—á–∫–∞ –∫–æ–Ω—Ç—Ä–∞–≥–µ–Ω—Ç–∞
        'UF_CRM_1697650557', # –ö–æ–ø–∏—è –°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ –≤–Ω–µ—Å–µ–Ω–∏–∏ –∑–∞–ø–∏—Å–∏ –≤ –ï–ì–†–Æ–õ/–ï–ì–†–ò–ü
        # 'UF_CRM_1711313588', # –ö–æ–ø–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞ (—Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–µ–π, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–µ–π –ø–æ –º–µ—Å—Ç—É –∂–∏—Ç–µ–ª—å—Å—Ç–≤–∞)
        'UF_CRM_1697650580', # –ö–æ–ø–∏—è –°–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–µ –Ω–∞ —É—á–µ—Ç –≤ –Ω–∞–ª–æ–≥–æ–≤–æ–º –æ—Ä–≥–∞–Ω–µ (–ò–ù–ù)
        'PHONE', # –¢–µ–ª–µ—Ñ–æ–Ω
        'EMAIL', # EMAIL
    ]
    rq_fields_to_check_ip = {
        'RQ_INN': '–ò–ù–ù', # –ò–ù–ù
        'RQ_COMPANY_NAME': '–°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏', # –°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        'RQ_COMPANY_FULL_NAME': '–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏', # –ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        'RQ_LAST_NAME': '–§–∞–º–∏–ª–∏—è', # –§–∞–º–∏–ª–∏—è
        'RQ_FIRST_NAME': '–ò–º—è', # –ò–º—è
        'RQ_SECOND_NAME': '–û—Ç—á–µ—Å—Ç–≤–æ', # –û—Ç—á–µ—Å—Ç–≤–æ
        'RQ_OGRNIP': '–û–ì–†–ù–ò–ü', # –û–ì–†–ù–ò–ü
    }
    rq_fields_to_check_ul = {
        'RQ_INN': '–ò–ù–ù', # –ò–ù–ù
        'RQ_COMPANY_NAME': '–°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏', # –°–æ–∫—Ä–∞—â–µ–Ω–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        'RQ_COMPANY_FULL_NAME': '–ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏', # –ü–æ–ª–Ω–æ–µ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏
        'RQ_OGRN': '–û–ì–†–ù', # –û–ì–†–ù
        'RQ_KPP': '–ö–ü–ü', # –ö–ü–ü
        'RQ_DIRECTOR': '–ì–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä', # –ì–µ–Ω–µ—Ä–∞–ª—å–Ω—ã–π –¥–∏—Ä–µ–∫—Ç–æ—Ä
    }
    bank_rq_fields_to_check = {
        'RQ_BANK_NAME' : '–ù–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–µ –±–∞–Ω–∫–∞',
        'RQ_BIK': "–ë–ò–ö",
        'RQ_ACC_NUM': "–†–∞—Å—á–µ—Ç–Ω—ã–π —Å—á—ë—Ç",
        'RQ_COR_ACC_NUM': "–ö–æ—Ä. —Å—á—ë—Ç",
    }
    contract = func.crm_item_get(contract_id)['item']
    company_id = contract['companyId']
    company = func.b.call('crm.company.get', {'id': company_id})
    try:
        rq = func.get_company_rq_list(company_id)
    except:
        rq = False

    check_result = []
    # return contract
    # –ü—Ä–æ–≤–µ–∫—Ä–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –¥–æ–≥–æ–≤–æ—Ä–∞
    # —Ñ–æ—Ä–º–∞—Ç –¥–æ–≥–æ–≤–æ—Ä–∞ == –ø—Ä–µ–¥–æ–ø–ª–∞—Ç–∞ 100
    if contract['ufCrm4_1696272505025'] == 134:
        ...
    # —Ñ–æ—Ä–º–∞—Ç –¥–æ–≥–æ–≤–æ—Ä–∞ == –û—Ç—Å—Ä–æ—á–∫–∞ –ø–ª–∞—Ç–µ–∂–∞
    if contract['ufCrm4_1696272505025'] == 136:
        if not contract['ufCrm4_1697045531854']:
            check_result.append(f'- –ü–æ–ª–µ "–°—Ä–æ–∫ –æ—Ç—Å—Ä–æ—á–∫–∏ –ø–ª–∞—Ç–µ–∂–∞" [URL=https://orgtraid.orgtraid.ru/crm/type/162/details/{contract["id"]}/] –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –¥–æ–≥–æ–≤–æ—Ä–∞ [/URL] ‚Üµ')
    # —Ñ–æ—Ä–º–∞—Ç –¥–æ–≥–æ–≤–æ—Ä–∞ == –ö—Ä–µ–¥–∏—Ç–Ω—ã–π –ª–∏–º–∏—Ç + –û—Ç—Å—Ä–æ—á–∫–∞ –ø–ª–∞—Ç–µ–∂–∞
    if contract['ufCrm4_1696272505025'] == 161:
        if not contract['ufCrm4_1697045531854']:
            check_result.append(f'- –ü–æ–ª–µ "–°—Ä–æ–∫ –æ—Ç—Å—Ä–æ—á–∫–∏ –ø–ª–∞—Ç–µ–∂–∞" [URL=https://orgtraid.orgtraid.ru/crm/type/162/details/{contract["id"]}/] –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –¥–æ–≥–æ–≤–æ—Ä–∞ [/URL] ‚Üµ')
        if not contract['ufCrm4_1696266393755']:
            check_result.append(f'- –ü–æ–ª–µ "–°—É–º–º–∞ –∫—Ä–µ–¥–∏—Ç–∞ –ø–æ –¥–æ–≥–æ–≤–æ—Ä—É" [URL=https://orgtraid.orgtraid.ru/crm/type/162/details/{contract["id"]}/] –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –¥–æ–≥–æ–≤–æ—Ä–∞ [/URL] ‚Üµ')
    if check_result:
        check_result.insert(0, '‚õîÔ∏è [B]–í –∫–∞—Ä—Ç–æ—á–∫–µ –¥–æ–≥–æ–≤–æ—Ä–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–ª—è—Ö:[/B]')
        check_result.append('[B]–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –¥–æ–≥–æ–≤–æ—Ä–∞ —Ç—Ä–µ–±—É–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—è—Ö[/B]')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏
    print('–û–ø—Ä–µ–¥–µ–ª—è—é —Ñ–æ—Ä–º—É —é—Ä–ª–∏—Ü–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ –∫–ª–∏–µ–Ω—Ç–∞')

    client_inn = company['UF_CRM_1690987965649']
    print(f'–ö–æ–ª-–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –∏–Ω–Ω  = {len(client_inn)}')

    check = False
    if len(client_inn) == 12:
        print('–ö–ª–∏–µ–Ω—Ç —è–≤–ª—è–µ—Ç—Å—è —Ñ–∏–∑–ª–∏—Ü–æ–º –∏–ª–∏ –∏–ø')
        # –ü–µ—Ä–µ–¥–∞–µ–º –ø–æ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏–ø
        # company_fields_to_check = company_fields_to_check.extend(company_fields_to_check_ip)
        for i in company_fields_to_check_ip:
            company_fields_to_check.append(i)
        # check = func.company_field_checker(company, company_fields_to_check_ip)
    if len(client_inn) == 10:
        print('–∫–ª–∏–µ–Ω—Ç —è–≤–ª—è–µ—Ç—Å—è —é—Ä–ª–∏—Ü–æ–º')
        # print(company_fields_to_check)
        # –ü–µ—Ä–µ–¥–∞–µ–º –ø–æ–ª—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Æ–õ
        company_fields_to_check = company_fields_to_check_ul

    else:
        print('—Å –∏–Ω–Ω –∫–ª–∏–µ–Ω—Ç–∞ —á–µ—Ç–æ –Ω–µ —Ç–∞–∫, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª–µ –∏–Ω–Ω')
    print(type(company))
    print(type(company_fields_to_check))
    check = func.company_field_checker(company, company_fields_to_check)
    if check:
        check_result.append('- - -')
        check_result.append('')
        check_result.append('‚õîÔ∏è [B]–í –∫–∞—Ä—Ç–æ—á–∫–µ –∫–æ–º–ø–∞–Ω–∏–∏ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–ª—è—Ö:[/B]')
        check_result.append('')
        # check_result.extend(check)
        check_result.extend(check)
        check_result.append('[B]–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤ –∫–∞—Ä—Ç–æ—á–∫–µ –∫–æ–º–ø–∞–Ω–∏–∏ —Ç—Ä–µ–±—É–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—è—Ö[/B]')
    if check_result:
        check_result.append('- - -')
        check_result.append('')

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤ –∫–∞—Ä—Ç–æ—á–∫–∏ –∫–æ–º–ø–∞–Ω–∏–∏
    rq_check_result = []
    if not rq:
        rq_check_result.append(f'‚ùå [B]–í –∫–∞—Ä—Ç–æ—á–∫–µ –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã —Ä–µ–∫–≤–∏–∑–∏—Ç—ã[/B] [URL=https://orgtraid.orgtraid.ru/crm/company/details/{company_id}/] –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–º–ø–∞–Ω–∏–∏ [/URL] ‚Üµ')
        rq_check_result.append(f'–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞')
    try:
        address = func.rq_address_get(rq["ID"])
        print(address)
    except:
        address = {}
    if not address:
        if len(client_inn) == 10:
            rq_check_result.append(f'‚ùå [B]–ü–æ–ª–µ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–æ[/B] [URL=https://orgtraid.orgtraid.ru/crm/company/details/{company_id}/] –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–º–ø–∞–Ω–∏–∏ [/URL] ‚Üµ')
            rq_check_result.append('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –ø–æ–ª–µ –Æ—Ä–∏–¥–∏—á–µ—Å–∫–∏–π –∞–¥—Ä–µ—Å')

    print('–ü–æ–ª—É—á–∞—é –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã')
    try:
        bank_rq = func.get_bank_rq_list(rq['ID'])
    except:
        bank_rq = []
        rq_check_result.append(f'‚ùå [B]–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã[/B] [URL=https://orgtraid.orgtraid.ru/crm/company/details/{company_id}/] –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–º–ø–∞–Ω–∏–∏ [/URL] ‚Üµ')
        rq_check_result.append('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞')
    if rq_check_result:
        check_result.extend(rq_check_result)
        # return check_result

    # –ü—Ä–æ–≤–µ–∫—Ä–∞ –ø–æ–ª–µ–π —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
    rq_fields_check_result = False
    if rq:
        print('–ü—Ä–æ–≤–µ—Ä—è—é —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∫–æ–º–ø–∞–Ω–∏–∏')
        print('')
        print(len(client_inn))
        if len(client_inn) == 12:
            print('–ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–µ–∫–≤–∏–∑–∏—Ç–∞ –¥–ª—è –ò–ü ))')
            rq_fields_check_result = func.rq_checker(company_id, rq, rq_fields_to_check_ip)
        if len(client_inn) == 10:
            print('–ó–∞–ø—É—Å–∫–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É —Ä–µ–∫–≤–∏–∑–∏—Ç–∞ –¥–ª—è –Æ—Ä–ª–∏—Ü ))')
            rq_fields_check_result = func.rq_checker(company_id, rq, rq_fields_to_check_ul)

        if rq_fields_check_result:

            check_result.append('- - -')
            check_result.append('')
            check_result.append('‚õîÔ∏è [B]–í —Ä–µ–∫–≤–∏–∑–∏—Ç–∞—Ö –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–ª—è—Ö:[/B]')
            for i in rq_fields_check_result:
                check_result.append(i)
            check_result.append('[B]–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤ —Ä–µ–∫–≤–∏–∑–∏—Ç–∞—Ö –∫–ª–∏–µ–Ω—Ç–∞ —Ç—Ä–µ–±—É–µ–º—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—è—Ö[/B]')

    if bank_rq:
        bank_rq_check = []
        print('–ü—Ä–æ–≤–µ—Ä—è—é –±–∞–Ω–∫–æ–≤—Å–∫–∏–π —Ä–µ–∫–≤–∏–∑–∏—Ç')
        for i in bank_rq_fields_to_check:
            print(i)
            if not bank_rq[i]:
                bank_rq_check.append(f'- –ü–æ–ª–µ {bank_rq_fields_to_check[i]} –≤ –±–∞–Ω–∫–æ–≤—Å–∫–æ–º —Ä–µ–∫–≤–∏–∑–∏—Ç–µ [URL=https://orgtraid.orgtraid.ru/crm/company/details/{company_id}/] –ü–µ—Ä–µ–π—Ç–∏ –∫ –∫–æ–º–ø–∞–Ω–∏–∏ [/URL] ‚Üµ')

        if bank_rq_check:
            check_result.append('- - -')
            check_result.append('')
            check_result.append('‚õîÔ∏è [B]–ë–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞ –Ω–µ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –ø–æ–ª—è—Ö:[/B]')
            check_result.extend(bank_rq_check)
            check_result.append('[B]–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –±–∞–Ω–∫–æ–≤—Å–∫–∏–µ —Ä–µ–∫–≤–∏–∑–∏—Ç—ã –∫–ª–∏–µ–Ω—Ç–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã—Ö –ø–æ–ª—è—Ö[/B]')

    return check_result

